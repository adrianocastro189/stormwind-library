"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[8462],{2409:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>d});var n=t(4848),a=t(8453),r=(t(6540),t(3628));const l={},i="Factory",o={id:"resources/core/factory",title:"Factory",description:"Factory is a simple part of the library responsible for emulating the new",source:"@site/docs/resources/core/factory.md",sourceDirName:"resources/core",slug:"/resources/core/factory",permalink:"/docs/resources/core/factory",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/resources/core/factory.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Environment",permalink:"/docs/resources/core/environment"},next:{title:"Output",permalink:"/docs/resources/core/output"}},c={},d=[{value:"How to allow classes to be instantiated",id:"how-to-allow-classes-to-be-instantiated",level:2},{value:"Examples",id:"examples",level:2},{value:"Class inheritance",id:"class-inheritance",level:2},{value:"Abstract classes",id:"abstract-classes",level:2}];function h(e){const s={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"factory",children:"Factory"})}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Factory"})," is a simple part of the library responsible for emulating the ",(0,n.jsx)(s.code,{children:"new"}),"\r\nkeyword from OOP languages."]}),"\n",(0,n.jsxs)(s.p,{children:["It registers a ",(0,n.jsx)(s.code,{children:"new()"})," method to the library structure that's capable of\r\ninstantiating classes that are registered in its ",(0,n.jsx)(s.code,{children:"classes"})," property."]}),"\n",(0,n.jsx)(s.admonition,{title:"Model factories are not covered here",type:"warning",children:(0,n.jsxs)(s.p,{children:["Please, refer to the ",(0,n.jsx)(s.a,{href:"/docs/category/factories",children:"factories"})," documentation for information about model factories, which are a different concept from this one."]})}),"\n",(0,n.jsx)(s.h2,{id:"how-to-allow-classes-to-be-instantiated",children:"How to allow classes to be instantiated"}),"\n",(0,n.jsxs)(s.p,{children:["These are the steps to allow ",(0,n.jsx)(s.a,{href:"classes",children:"classes"})," to be instantiated:"]}),"\n",(0,n.jsxs)(s.ol,{children:["\n",(0,n.jsxs)(s.li,{children:["When writing a Lua file containing a class, make sure to register it by doing\r\n",(0,n.jsx)(s.code,{children:"self:addClass('<class name>', <class table>)"})," right below the ",(0,n.jsx)(s.code,{children:"<class name>.__index = <class table>"}),"\r\nline","\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["It's also possible to limit the class instantiation per World of Warcraft\r\nversion by adding a third parameter to this call, which is a string or\r\ntable representing one or many ",(0,n.jsx)(s.a,{href:"environment",children:"client flavors"})]}),"\n",(0,n.jsx)(s.li,{children:"When no flavors are provided, the class is instantiable in any World of\r\nWarcraft version"}),"\n",(0,n.jsxs)(s.li,{children:["After version 1.6.0, a new parameter was introduced to allow the\r\nregistration of abstract classes by using the new ",(0,n.jsx)(s.code,{children:"library.classTypes"}),"\r\nconstants","\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"CLASS_TYPE_ABSTRACT"})," for abstract classes"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"CLASS_TYPE_CONCRETE"})," for concrete classes that can be instantiated,\r\nwhich is also the default value when omitted"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["Write the ",(0,n.jsx)(s.code,{children:"__constructor()"})," method accepting zero or many parameters"]}),"\n"]}),"\n",(0,n.jsxs)(s.p,{children:["With that, it's possible to ask the library to provide a new instance of that\r\nclass with a ",(0,n.jsx)(s.code,{children:"new"})," call."]}),"\n",(0,n.jsx)(r.A,{videoId:"KRL30brxHLU"}),"\n",(0,n.jsx)(s.h2,{id:"examples",children:"Examples"}),"\n",(0,n.jsx)(s.p,{children:"Adding a class that's instantiable in any World of Warcraft version:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-lua",children:"local MyClass = {}\r\nMyClass.__index = MyClass\r\nself:addClass('MyClass', MyClass)\r\n\r\nfunction MyClass.__construct(name)\r\n    local self = setmetatable({}, MyClass)\r\n\r\n    self.name = name\r\n\r\n    return self\r\nend\n"})}),"\n",(0,n.jsx)(s.p,{children:"Adding a class that's instantiable only in Classic Era"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-lua",children:"local MyClassicEraClass = {}\r\nMyClassicEraClass.__index = MyClassicEraClass\r\nself:addClass('MyClassicEraClass', MyClassicEraClass, library.environment.constants.CLIENT_CLASSIC_ERA)\r\n\r\nfunction MyClassicEraClass.__construct()\r\n    -- ...\r\nend\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Now, it's possible to instantiate ",(0,n.jsx)(s.code,{children:"MyClass"})," in any World of Warcraft version\r\nby doing a ",(0,n.jsx)(s.code,{children:"new()"})," call in the library instance, but ",(0,n.jsx)(s.code,{children:"MyClassicEraClass"})," can\r\nonly be instantiated if running a World of Warcraft Classic Era client, like\r\nin Season of Discovery, Hardcore, etc."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-lua",children:"-- this will work in any World of Warcraft version\r\nlocal instance = library:new('MyClass', 'Any name')\r\n\r\n-- this will throw an error if running in a non-Classic Era client\r\nlocal instance = library:new('MyClassicEraClass')\n"})}),"\n",(0,n.jsx)(s.h2,{id:"class-inheritance",children:"Class inheritance"}),"\n",(0,n.jsxs)(s.p,{children:["It's possible to extend classes when inheriting their table structures by\r\ngetting the class structure with ",(0,n.jsx)(s.code,{children:"getClass()"})," and then setting the metatable of\r\nthe new class with the parent class structure."]}),"\n",(0,n.jsxs)(s.p,{children:["If using the library version 1.6.0 or newer, it's also possible to use a helper\r\nmethod called ",(0,n.jsx)(s.code,{children:"extend()"})," that expects a table structure and the parent class\r\nname."]}),"\n",(0,n.jsxs)(s.p,{children:["This method will set the child class metatable with the parent class structure\r\nbut be warned that it won't add the class to be instantiated automatically. The\r\nreason for that is that ",(0,n.jsx)(s.code,{children:"addClass()"})," can also be used to add abstract classes,\r\nso ",(0,n.jsx)(s.code,{children:"extend()"})," can't determine if the child class should be instantiable or not."]}),"\n",(0,n.jsxs)(s.p,{children:["To save code repetition when extending classes, it's also possible to use the\r\n",(0,n.jsx)(s.code,{children:"addChildClass()"})," method, which will extend the class and add it to the list of\r\nclasses handled by the library. This method will also respect the client flavors\r\nif provided, just like for the ",(0,n.jsx)(s.code,{children:"addClass()"})," method, and also be able to add\r\nabstract child classes, as long as passing the correct class type constant."]}),"\n",(0,n.jsx)(s.p,{children:"Example:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-lua",children:"local MyParentClass = {}\r\nMyParentClass.__index = MyParentClass\r\n-- constructor omitted for brevity in this example\r\nlibrary:addClass('MyParentClass', MyParentClass)\r\n\r\nlocal MyChildClass = {}\r\nMyChildClass.__index = MyChildClass\r\n-- constructor omitted for brevity in this example\r\n\r\n-- extend the class with...\r\nlibrary:extend(MyChildClass, 'MyParentClass')\r\nlibrary:addClass('MyChildClass', MyChildClass)\r\n-- ...or\r\nlibrary:addChildClass('MyChildClass', MyChildClass, 'MyParentClass')\n"})}),"\n",(0,n.jsx)(s.admonition,{title:"Parent class constructor limitations",type:"warning",children:(0,n.jsxs)(s.p,{children:["Due to how class instantiation works in the Stormwind Library, the parent\r\nclass constructor can be a bit tricky to call. The best way to do it is to\r\nnot use this structure if you need that or override the ",(0,n.jsx)(s.code,{children:"__construct()"})," method\r\nin the child class by doing the same thing as the parent class constructor."]})}),"\n",(0,n.jsx)(s.h2,{id:"abstract-classes",children:"Abstract classes"}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.a,{href:"../../changelog",children:"Stormwind Library v1.6.0"})," introduced the concept of abstract\r\nclasses to its Factory by allowing the registration of classes that can't be\r\ninstantiated with the ",(0,n.jsx)(s.code,{children:"new()"})," method. This is useful for creating classes that\r\nare meant to be used as a base for other classes with abstractions and methods\r\nthat should be implemented by child classes."]}),"\n",(0,n.jsxs)(s.p,{children:["To register an abstract class, use the ",(0,n.jsx)(s.code,{children:"addAbstractClass()"})," method instead of\r\n",(0,n.jsx)(s.code,{children:"addClass()"}),". With that, the ",(0,n.jsx)(s.code,{children:"new()"})," method won't be able to instantiate that\r\nclass."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-lua",children:"local MyAbstractClass = {}\r\nMyAbstractClass.__index = MyAbstractClass\r\nself:addAbstractClass('MyAbstractClass', MyAbstractClass)\n"})})]})}function u(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},3628:(e,s,t)=>{t.d(s,{A:()=>a});t(6540);var n=t(4848);const a=e=>{let{videoId:s}=e;return(0,n.jsx)("div",{style:{position:"relative",paddingBottom:"56.25%",height:0,overflow:"hidden",maxWidth:"100%",background:"#000"},children:(0,n.jsx)("iframe",{src:`https://www.youtube.com/embed/${s}`,style:{position:"absolute",top:0,left:0,width:"100%",height:"100%"},frameBorder:"0",allowFullScreen:!0,title:"YouTube video"})})}},8453:(e,s,t)=>{t.d(s,{R:()=>l,x:()=>i});var n=t(6540);const a={},r=n.createContext(a);function l(e){const s=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),n.createElement(r.Provider,{value:s},e.children)}}}]);