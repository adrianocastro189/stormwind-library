"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[4465],{2094:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>d,contentTitle:()=>c,default:()=>l,frontMatter:()=>n,metadata:()=>a,toc:()=>i});var r=t(4848),s=t(8453);const n={},c="Bool",a={id:"resources/support/bool",title:"Bool",description:"The Bool support methods are focused on working and validating bool",source:"@site/docs/resources/support/bool.md",sourceDirName:"resources/support",slug:"/resources/support/bool",permalink:"/stormwind-library/docs/resources/support/bool",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/resources/support/bool.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Arr",permalink:"/stormwind-library/docs/resources/support/arr"},next:{title:"Str",permalink:"/stormwind-library/docs/resources/support/str"}},d={},i=[{value:"Methods",id:"methods",level:2}];function u(e){const o={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",strong:"strong",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(o.h1,{id:"bool",children:"Bool"}),"\n",(0,r.jsxs)(o.p,{children:["The ",(0,r.jsx)(o.strong,{children:"Bool"})," support methods are focused on working and validating bool\r\nvalues."]}),"\n",(0,r.jsxs)(o.p,{children:["Each helper method is well documented in the support source code and won't\r\nbe duplicated here. Please, refer to the ",(0,r.jsx)(o.code,{children:"./src/Support/Bool.lua"})," for better\r\nreference."]}),"\n",(0,r.jsx)(o.h2,{id:"methods",children:"Methods"}),"\n",(0,r.jsxs)(o.p,{children:["Please, refer to the ",(0,r.jsx)(o.a,{href:"pathname:///lua-docs/classes/Support.Bool.html",children:"technical documentation"}),"\r\nto get more information about this class and its methods."]})]})}function l(e={}){const{wrapper:o}={...(0,s.R)(),...e.components};return o?(0,r.jsx)(o,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},8453:(e,o,t)=>{t.d(o,{R:()=>c,x:()=>a});var r=t(6540);const s={},n=r.createContext(s);function c(e){const o=r.useContext(n);return r.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function a(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),r.createElement(n.Provider,{value:o},e.children)}}}]);