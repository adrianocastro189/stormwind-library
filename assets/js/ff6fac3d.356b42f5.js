"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[8462],{1648:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>o,contentTitle:()=>i,default:()=>h,frontMatter:()=>t,metadata:()=>l,toc:()=>c});var r=n(4848),a=n(8453);const t={},i="Factory",l={id:"resources/core/factory",title:"Factory",description:"The Factory is a simple part of the library responsible for emulating the new keyword from OOP languages.",source:"@site/docs/resources/core/factory.md",sourceDirName:"resources/core",slug:"/resources/core/factory",permalink:"/docs/resources/core/factory",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/resources/core/factory.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Environment",permalink:"/docs/resources/core/environment"},next:{title:"Output",permalink:"/docs/resources/core/output"}},o={},c=[{value:"How to allow classes to be instantiated",id:"how-to-allow-classes-to-be-instantiated",level:2},{value:"Examples",id:"examples",level:2},{value:"Class inheritance",id:"class-inheritance",level:2}];function d(e){const s={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.h1,{id:"factory",children:"Factory"}),"\n",(0,r.jsxs)(s.p,{children:["The ",(0,r.jsx)(s.strong,{children:"Factory"})," is a simple part of the library responsible for emulating the ",(0,r.jsx)(s.code,{children:"new"})," keyword from OOP languages."]}),"\n",(0,r.jsxs)(s.p,{children:["It registers a ",(0,r.jsx)(s.code,{children:"new()"})," method to the library structure that's capable of instantiating classes\r\nthat are registered in its ",(0,r.jsx)(s.code,{children:"classes"})," property."]}),"\n",(0,r.jsx)(s.admonition,{title:"Model factories are not covered here",type:"warning",children:(0,r.jsxs)(s.p,{children:["Please, refer to the ",(0,r.jsx)(s.a,{href:"/docs/category/factories",children:"factories"})," documentation for information about model factories, which are a different concept from this one."]})}),"\n",(0,r.jsx)(s.h2,{id:"how-to-allow-classes-to-be-instantiated",children:"How to allow classes to be instantiated"}),"\n",(0,r.jsxs)(s.p,{children:["These are the steps to allow ",(0,r.jsx)(s.a,{href:"classes",children:"classes"})," to be instantiated:"]}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsxs)(s.li,{children:["When writing a Lua file containing a class, make sure to register it by doing\r\n",(0,r.jsx)(s.code,{children:"self:addClass('<class name>', <class name>)"})," right below the ",(0,r.jsx)(s.code,{children:"<class name>.__index = <class name>"}),"\r\nline","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["It's also possible to limit the class instantiation per World of Warcraft\r\nversion by adding a third parameter to this call, which is a string or\r\ntable representing one or many ",(0,r.jsx)(s.a,{href:"environment",children:"client flavors"})]}),"\n",(0,r.jsx)(s.li,{children:"When no flavors are provided, the class is instantiable in any World of\r\nWarcraft version"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["Write the ",(0,r.jsx)(s.code,{children:"__constructor()"})," method accepting zero or many parameters"]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["With that, it's possible to ask the library to provide a new instance of that\r\nclass with a ",(0,r.jsx)(s.code,{children:"new"})," call."]}),"\n",(0,r.jsx)(s.h2,{id:"examples",children:"Examples"}),"\n",(0,r.jsx)(s.p,{children:"Adding a class that's instantiable in any World of Warcraft version:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-lua",children:"local MyClass = {}\r\nMyClass.__index = MyClass\r\nself:addClass('MyClass', MyClass)\r\n\r\nfunction MyClass.__construct(name)\r\n    local self = setmetatable({}, MyClass)\r\n\r\n    self.name = name\r\n\r\n    return self\r\nend\n"})}),"\n",(0,r.jsx)(s.p,{children:"Adding a class that's instantiable only in Classic Era"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-lua",children:"local MyClassicEraClass = {}\r\nMyClassicEraClass.__index = MyClassicEraClass\r\nself:addClass('MyClassicEraClass', MyClassicEraClass, library.environment.constants.CLIENT_CLASSIC_ERA)\r\n\r\nfunction MyClassicEraClass.__construct()\r\n    -- ...\r\nend\n"})}),"\n",(0,r.jsxs)(s.p,{children:["Now, it's possible to instantiate ",(0,r.jsx)(s.code,{children:"MyClass"})," in any World of Warcraft version\r\nby doing a ",(0,r.jsx)(s.code,{children:"new()"})," call in the library instance, but ",(0,r.jsx)(s.code,{children:"MyClassicEraClass"})," can\r\nonly be instantiated if running a World of Warcraft Classic Era client, like\r\nin Season of Discovery, Hardcore, etc."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-lua",children:"-- this will work in any World of Warcraft version\r\nlocal instance = library:new('MyClass', 'Any name')\r\n\r\n-- this will throw an error if running in a non-Classic Era client\r\nlocal instance = library:new('MyClassicEraClass')\n"})}),"\n",(0,r.jsx)(s.h2,{id:"class-inheritance",children:"Class inheritance"}),"\n",(0,r.jsxs)(s.p,{children:["To allow class inheritance, instead of calling the ",(0,r.jsx)(s.code,{children:"new()"})," method directly,\r\nit's possible to retrieve a class structure with the ",(0,r.jsx)(s.code,{children:"getClass()"})," method. That\r\nway, a class can inherit another one by using any inheritance strategy, like\r\nsetting the meta table."]}),"\n",(0,r.jsx)(s.p,{children:"Example:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-lua",children:"-- imagine that this is a class in the library or in another addon\r\nlocal MyClass = {}\r\nMyClass.__index = MyClass\r\nself:addClass('MyClass', MyClass)\r\n\r\n-- then to inherit from MyClass, get the class structure with:\r\nmyClassStructure = library:getClass('MyClass')\r\n-- and then inherit from it using your preferred way to work with inheritance\r\n-- in Lua, like the setmetatable function\r\nsetmetatable(MyNewClass, myClassStructure)\n"})}),"\n",(0,r.jsx)(s.admonition,{title:"Parent class constructor limitations",type:"warning",children:(0,r.jsxs)(s.p,{children:["Due to how class instantiation works in the Stormwind Library, the parent\r\nclass constructor can be a bit tricky to call. The best way to do it is to\r\nnot use this structure if you need that or override the ",(0,r.jsx)(s.code,{children:"__construct()"})," method\r\nin the child class by doing the same thing as the parent class constructor."]})})]})}function h(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>l});var r=n(6540);const a={},t=r.createContext(a);function i(e){const s=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),r.createElement(t.Provider,{value:s},e.children)}}}]);